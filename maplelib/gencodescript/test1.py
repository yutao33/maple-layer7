#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re

#Node: type=WRITE
i1='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Node[key=NodeKey [_nodeId=Uri [_value=openflow:1]]], domData = RecursiveWriteCandidateNode{data = ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=openflow:1}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:1, attributes={}}, ImmutableMapNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point, value=UnmodifiableCollection{[ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:1:1}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:1:1, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1:1}], attributes={}}]}], attributes={}}, ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:1:2}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:1:2, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1:2}], attributes={}}]}], attributes={}}, ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:1:LOCAL}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:1:LOCAL, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1:LOCAL}], attributes={}}]}], attributes={}}]}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:1}], attributes={}}]}], attributes={}}}}'

#Link: type=WRITE
i2='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Link[key=LinkKey [_linkId=Uri [_value=openflow:1:1]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=openflow:1:1}], modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination, modificationType=MERGE, childModification={}]}], oldMeta = null, newMeta = SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@410b3c8a, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=openflow:1:1}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, value=openflow:1:1, attributes={}}, ImmutableContainerNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source, value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node, value=openflow:1, attributes={}}, ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp, value=openflow:1:1, attributes={}}], attributes={}}, ImmutableContainerNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination, value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp, value=openflow:2:3, attributes={}}, ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node, value=openflow:2, attributes={}}], attributes={}}], attributes={}}}}}'

#Node: type=SUBTREE_MODIFIED
i3='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Node[key=NodeKey [_nodeId=Uri [_value=openflow:3]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=openflow:3}], modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point, modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}]=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}], modificationType=MERGE, childModification={AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}=NodeModification [identifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, modificationType=MERGE, childModification={}]}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}]=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}], modificationType=MERGE, childModification={AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}=NodeModification [identifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, modificationType=MERGE, childModification={}]}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}]=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}], modificationType=MERGE, childModification={AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}=NodeModification [identifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, modificationType=MERGE, childModification={}]}]}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, modificationType=MERGE, childModification={}]}], oldMeta = SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=openflow:3}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:3, attributes={}}, ImmutableMapNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point, value=[ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:3}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:3, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:3}], attributes={}}]}], attributes={}}]}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}], attributes={}}]}], attributes={}}}, newMeta = LazyContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=LazyContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:LOCAL, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:LOCAL}], attributes={}}]}], attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:1, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:1}], attributes={}}]}], attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:2, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:2}], attributes={}}]}], attributes={}}}}, untouched=[ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:3}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:3, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:3}], attributes={}}]}], attributes={}}]}}, untouched=[ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}], attributes={}}]}]}}}'

#Link: type=SUBTREE_MODIFIED
i4='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Link[key=LinkKey [_linkId=Uri [_value=openflow:3:3]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=openflow:3:3}], modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source, modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp, modificationType=MERGE, childModification={}]}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination, modificationType=MERGE, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp, modificationType=MERGE, childModification={}], (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node, modificationType=MERGE, childModification={}]}]}], oldMeta = MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, value=openflow:3:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp, value=openflow:3:3, attributes={}}}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp, value=openflow:1:2, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f9cb22, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node, value=openflow:1, attributes={}}}}}}}, newMeta = MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, value=openflow:3:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp, value=openflow:3:3, attributes={}}}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@47b69ade, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp, value=openflow:1:2, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node, value=openflow:1, attributes={}}}}}}}}}'

#Link: type=DELETE
i5='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Link[key=LinkKey [_linkId=Uri [_value=openflow:1:2]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=openflow:1:2}], modificationType=DELETE, childModification={}], oldMeta = MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@410b3c8a, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)link-id, value=openflow:1:2, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@410b3c8a, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-node, value=openflow:1, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)source-tp, value=openflow:1:2, attributes={}}}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)destination=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@410b3c8a, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-tp, value=openflow:3:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1036156f, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)dest-node, value=openflow:3, attributes={}}}}}}}, newMeta = null}}'

#Node: type=SUBTREE_MODIFIED
i6='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Node[key=NodeKey [_nodeId=Uri [_value=openflow:3]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=openflow:3}], modificationType=TOUCH, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point, modificationType=TOUCH, childModification={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}]=NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}], modificationType=DELETE, childModification={}]}]}], oldMeta = LazyContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f828f15, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@1f828f15, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:LOCAL, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:LOCAL}], attributes={}}]}], attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:1}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:1, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:1}], attributes={}}]}], attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:2, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:2}], attributes={}}]}], attributes={}}}}}}, untouched=[ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}], attributes={}}]}]}, newMeta = LazyContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@17cfde97, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@17cfde97, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:LOCAL, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:LOCAL}], attributes={}}]}], attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:2}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:2, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:2}], attributes={}}]}], attributes={}}}}}}, untouched=[ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}], attributes={}}]}]}}}'

#Node: type=DELETE
i7='LazyDataObjectModification{identifier = org.opendaylight.yang.gen.v1.urn.tbd.params.xml.ns.yang.network.topology.rev131021.network.topology.topology.Node[key=NodeKey [_nodeId=Uri [_value=openflow:3]]], domData = ChildNode{mod = NodeModification [identifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=openflow:3}], modificationType=DELETE, childModification={}], oldMeta = LazyContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@21d90faf, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id=ValueNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, value=ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)node-id, value=openflow:3, attributes={}}}, (urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point=MaterializedContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@52782dd4, subtreeVersion=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@21d90faf, children={(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}]=SimpleContainerNode{version=org.opendaylight.yangtools.yang.data.api.schema.tree.spi.Version@828dece, data=ImmutableMapEntryNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)termination-point[{(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id=openflow:3:LOCAL}], value=[ImmutableLeafNode{nodeIdentifier=(urn:TBD:params:xml:ns:yang:network-topology?revision=2013-10-21)tp-id, value=openflow:3:LOCAL, attributes={}}, ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-connector-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}]/node-connector/node-connector[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3:LOCAL}], attributes={}}]}], attributes={}}}}}}, untouched=[ImmutableAugmentationNode{nodeIdentifier=AugmentationIdentifier{childNames=[(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref]}, value=[ImmutableLeafNode{nodeIdentifier=(urn:opendaylight:model:topology:inventory?revision=2013-10-30)inventory-node-ref, value=/(urn:opendaylight:inventory?revision=2013-08-19)nodes/node/node[{(urn:opendaylight:inventory?revision=2013-08-19)id=openflow:3}], attributes={}}]}]}, newMeta = null}}'


i=i1;

tabnum=0;

str=''

def nextline():
    global str
    str+='\n'+'\t'*tabnum;

for k in i:
    if(k=='{' or k=='['):
        nextline()
        tabnum=tabnum+1;
        str+=k;
        nextline()
    elif (k=='}' or k==']'):
        tabnum=tabnum-1;
        nextline()
        str+=k;
        nextline()
    elif (k==','):
        str+=k
        nextline()
    else:
        str+=k
str1 = re.sub("\n\t*\n","\n",str)
print(str1)

